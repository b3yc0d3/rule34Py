[project]
name = "rule34Py"
description = "API wrapper for rule34.xxx"

authors = [
	{ name = "b3yc0d3", email = "b3yc0d3@gmail.com" },
	{ name = "MiningXL", email = "miningxl@gmail.com" },
	{ name = "ripariancommit", email = "ripariancommit@protonmail.com" },
	{ name = "Tal A. Baskin", email = "talbaskin.business@gmail.com" },
]
dynamic = [
	"classifiers",
]
dependencies = [  # project runtime dependencies
	"beautifulsoup4",
	"lxml",
	"requests-ratelimiter",
	"requests",
]
keywords = [
	"adult",
	"api-client",
	"nsfw",
	"rule34-pi",
	"rule34.xxx",
]
license = { text = "GPL-3.0-only" }
maintainers = [
	{ name = "b3yc0d3", email = "b3yc0d3@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.9, <4.0"
version = "4.0.0"


[project.urls]
Issues = "https://github.com/b3yc0d3/rule34Py/issues"
Repository = "https://github.com/b3yc0d3/rule34Py"
Documentation = "https://b3yc0d3.github.io/rule34Py/"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
classifiers = [
	"Development Status :: 4 - Beta",
	"Operating System :: OS Independent"
]
packages = [
	{ include = "rule34Py" },
]


[tool.poetry.group.dev.dependencies]
ruff = "*"


[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx-mdinclude = "*"
sphinx-rtd-theme = "*"
tomli = { version = "*", python = "<3.11" }


[tool.poetry.group.test.dependencies]
packaging = "*"
pytest = "*"
responses = "*"


[tool.ruff.lint]
preview = true  # necessary to enable the pydoclint rules
select = [
	"D",  # pydocstyle
	"DOC",  # pydoclint
#	"I",  # isort
#	"F",  # Pyflakes
#	"E",  # pycodestyle - error
#	"N",  # pep8-naming
#	"PL",  # pylint - all
#	"RUF",  # Ruff-specific rules
]
ignore = [
	# Ignore line lengths; mostly bc. there is no way to ignore only docstring linelengths.
	"E501",
	# Ignore PEP 8 bad-module-name. 'rule34Py' does not comply, but will not be renamed.
	"N999",
]


[tool.ruff.lint.pydocstyle]
convention = "google"  # Use Google-style docstrings.
